.include "pmem_defs.asm"
	
.global main

;Set the dac values:

.set GP_array_to_proc, 0x017E
.set mem, 0x5200
.set mem1, 0x5000
.set mem2, 0x6004
.set DAC_01_00, 0x01D0
.set DAC_03_02, 0x01D2
.set DAC_05_04, 0x01D4
.set DAC_07_06, 0x01D6
.set DAC_09_08, 0x01D8


main:
    mov     #DMEM_250, r1           ; Initialize stack pointer
    mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
	mov	#0x5A80, &WDTCTL	; Disbles the watchdog timer by setting WDTHOLD=1 
	mov     #0x0064, &GP_PER_1      ; sel_avd_25 = On, IVDD to 2.5V, Set vtun_ext = On
	mov	#0x0002, &TUN_MUX
 	mov     #0, &ROW_SEL
    mov     #0, &COL_SEL
	mov	#0x0000, &GATE_S	; gate_s = 0.6V (@ IVDD 2.5V)
	mov	#0x0000, &GATE_US_P	; gate_us_p = 0.6V (@ IVDD 2.5V)
	mov	#0x0040, &GATE_US_N	; gate_us_n = gnd (@ IVDD 2.5V)
	mov     #0x3F04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v, dvdd2.5=On, loc_dreset=1,
    mov     #1, r5             	; Number of ms
    mov     #0x1F04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v, dvdd2.5=On, loc_dreset=0,
	mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn
	mov     #0x0000, &PROG_BITS     ; PROG = 0, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0

mov  #0x0000, &DMEM_200
mov  #0x0000, r15

/* --------------   TIMER A TEST:  CAPTURE OVERFLOW ----------------- */

        mov  #0x0200, &TACTL
        mov  #0x0000, &TACCTL0
        mov  #0x0000, &TACCTL1
        mov  #0x0000, &TACCTL2
        dint

                                ; # --------- Comparator 0 ----------
        mov  #0x0204, &TACTL
        mov  #0xC000, &TACCTL0  ; # Both edges:  No read -> overflow
        mov  #0x0001, &DMEM_200
        nop
        nop
        mov &TACCTL0, &DMEM_202
        mov  #0x0002, &DMEM_200
        nop
        nop
        mov &TACCTL0, &DMEM_204
        mov  #0x0000, &TACCTL0
        mov  #0x0003, &DMEM_200

   
/* ----------------------         END OF TEST        --------------- */
end_of_test:
        nop
        br #0xffff
        
/* ----------------------      INTERRUPT ROUTINES    --------------- */

TIMERA_CCR0_VECTOR:
        inc  &DMEM_200
        reti
   
/* ----------------------         INTERRUPT VECTORS  --------------- */

.section .vectors, "a"
.word end_of_test     ; Interrupt  0 (lowest priority)    <unused>
.word end_of_test     ; Interrupt  1                      <unused>
.word end_of_test     ; Interrupt  2                      <unused>
.word end_of_test     ; Interrupt  3                      <unused>
.word end_of_test     ; Interrupt  4                      <unused>
.word end_of_test     ; Interrupt  5                      <unused>
.word end_of_test     ; Interrupt  6                      <unused>
.word end_of_test     ; Interrupt  7                      <unused>
.word end_of_test     ; Interrupt  8                      <unused>
.word TIMERA_CCR0_VECTOR; Interrupt  9                    Timer A
.word end_of_test     ; Interrupt 10                      Watchdog timer
.word end_of_test     ; Interrupt 11                      <unused>
.word end_of_test     ; Interrupt 12                      <unused>
.word end_of_test    ; Interrupt 13                      <unused>
.word end_of_test      ; Interrupt 14                      NMI
.word main              ; Interrupt 15 (highest priority)   RESET
        